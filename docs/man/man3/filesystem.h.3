.TH "src/include/omega_edit/filesystem.h" 3 "Wed Mar 2 2022" "Version 0.8.1" "omega_edit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/include/omega_edit/filesystem.h
.SH SYNOPSIS
.br
.PP
\fC#include 'export\&.h'\fP
.br
\fC#include <stdint\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP const char * \fBomega_util_get_current_dir\fP (char *buffer)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_util_touch\fP (const char *file_name, int create)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_util_file_exists\fP (const char *file_name)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_util_directory_exists\fP (const char *path)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_util_create_directory\fP (char const *path)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_util_remove_file\fP (char const *path)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_util_remove_directory\fP (char const *path)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int64_t \fBomega_util_file_size\fP (char const *path)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP char * \fBomega_util_basename\fP (char const *path, char *buffer, int drop_suffix)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP char * \fBomega_util_file_extension\fP (char const *path, char *buffer)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP char * \fBomega_util_available_filename\fP (char const *path, char *buffer)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP char * \fBomega_util_normalize_path\fP (char const *path, char *buffer)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP char * \fBomega_util_dirname\fP (char const *path, char *buffer)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBOMEGA_EDIT_EXPORT\fP char * omega_util_available_filename (char const * path, char * buffer)"
Creates a available filename from the given path 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP desired path 
.br
\fIbuffer\fP pointer to a buffer that can hold up to FILENAME_MAX bytes, or NULL to use an internal static buffer 
.RE
.PP
\fBReturns\fP
.RS 4
a path that is currently available (insecure as the file may exist later at the time of attempted creation) 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP char * omega_util_basename (char const * path, char * buffer, int drop_suffix)"
Given a file name, return the associated basename (filename without the directory) and if a matching suffix is given, the returned basename will have the suffix removed 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP file path 
.br
\fIbuffer\fP pointer to memory to hold the base name (allocated to at least FILENAME_MAX) or could be NULL, in which case an internal static buffer will be used 
.br
\fIdrop_suffix\fP if non-zero, remove the suffix (file extension) from the path basename 
.RE
.PP
\fBReturns\fP
.RS 4
associated basename, possibly without the suffix 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_util_create_directory (char const * path)"
Create the given directory 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP directory to create 
.RE
.PP
\fBReturns\fP
.RS 4
zero if the path was created successfully and non-zero otherwise 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_util_directory_exists (const char * path)"
Check if the given directory exists 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP directory to check for the existence of 
.RE
.PP
\fBReturns\fP
.RS 4
non-zero if the directory exists and zero otherwise 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP char * omega_util_dirname (char const * path, char * buffer)"
Given a file name, return the associated directory 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP file path 
.br
\fIbuffer\fP pointer to memory to hold the directory name (allocated to at least FILENAME_MAX) or could be NULL, in which case an internal static buffer will be used 
.RE
.PP
\fBReturns\fP
.RS 4
associated directory 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_util_file_exists (const char * file_name)"
Check if the given file name exists 
.PP
\fBParameters\fP
.RS 4
\fIfile_name\fP file name to check existence of 
.RE
.PP
\fBReturns\fP
.RS 4
non-zero if the file exists, and zero otherwise 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP char * omega_util_file_extension (char const * path, char * buffer)"
Given a file name, return the associated file extension, with or without the dot prefix 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP file path 
.br
\fIbuffer\fP pointer to memory to hold the file extension (allocated to at least FILENAME_MAX) or could be NULL, in which case an internal static buffer will be used 
.RE
.PP
\fBReturns\fP
.RS 4
associated file extension or NULL if no extension exists 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int64_t omega_util_file_size (char const * path)"
Given a file path, return the file size 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP path to get the file size of 
.RE
.PP
\fBReturns\fP
.RS 4
file size 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP const char * omega_util_get_current_dir (char * buffer)"
Gets the current working directory 
.PP
\fBParameters\fP
.RS 4
\fIbuffer\fP pointer to memory to hold the current working directory (allocated to at least FILENAME_MAX) or could be NULL, in which case an internal static buffer will be used 
.RE
.PP
\fBReturns\fP
.RS 4
current working directory or NULL on error 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP char * omega_util_normalize_path (char const * path, char * buffer)"
Given a path, which must exist, returns an absolute path that has no symbolic link, dot, or dot-dot elements 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP path to get the absolute path of 
.br
\fIbuffer\fP pointer to memory to hold the file extension (allocated to at least FILENAME_MAX) or could be NULL, in which case an internal static buffer will be used 
.RE
.PP
\fBReturns\fP
.RS 4
absolute path that has no symbolic link, dot, or dot-dot elements 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_util_remove_directory (char const * path)"
Remove the given directory 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP directory to remove 
.RE
.PP
\fBReturns\fP
.RS 4
zero if the path was removed successfully and non-zero otherwise 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_util_remove_file (char const * path)"
Remove the given file 
.PP
\fBParameters\fP
.RS 4
\fIpath\fP path to the fle to remove 
.RE
.PP
\fBReturns\fP
.RS 4
zero if the file was removed successfully and non-zero otherwise 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_util_touch (const char * file_name, int create)"
Touch the given file, optionally creating it f it does not exist 
.PP
\fBParameters\fP
.RS 4
\fIfile_name\fP flle name to touch 
.br
\fIcreate\fP if non-zero, create the file name if it does not exist 
.RE
.PP
\fBReturns\fP
.RS 4
zero on success, non-zero on failure 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for omega_edit from the source code\&.
