.TH "src/include/omega_edit/session.h" 3 "Thu Mar 3 2022" "Version 0.8.1" "omega_edit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/include/omega_edit/session.h
.SH SYNOPSIS
.br
.PP
\fC#include 'byte\&.h'\fP
.br
\fC#include 'export\&.h'\fP
.br
\fC#include 'fwd_defs\&.h'\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP const char * \fBomega_session_get_file_path\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP void * \fBomega_session_get_user_data_ptr\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int64_t \fBomega_session_get_num_viewports\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int64_t \fBomega_session_get_num_changes\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int64_t \fBomega_session_get_num_undone_changes\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int64_t \fBomega_session_get_computed_file_size\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP const \fBomega_change_t\fP * \fBomega_session_get_last_change\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP const \fBomega_change_t\fP * \fBomega_session_get_last_undo\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP const \fBomega_change_t\fP * \fBomega_session_get_change\fP (const \fBomega_session_t\fP *session_ptr, int64_t change_serial)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP int \fBomega_session_viewport_on_change_callbacks_paused\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP void \fBomega_session_pause_viewport_event_callbacks\fP (\fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP void \fBomega_session_resume_viewport_event_callbacks\fP (\fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP size_t \fBomega_session_get_num_checkpoints\fP (const \fBomega_session_t\fP *session_ptr)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP void \fBomega_session_notify\fP (const \fBomega_session_t\fP *session_ptr, \fBomega_session_event_t\fP session_event, const \fBomega_change_t\fP *change_ptr)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBOMEGA_EDIT_EXPORT\fP const \fBomega_change_t\fP * omega_session_get_change (const \fBomega_session_t\fP * session_ptr, int64_t change_serial)"
Given a change serial, get the change 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to which the change belongs 
.br
\fIchange_serial\fP change serial of the change to get 
.RE
.PP
\fBReturns\fP
.RS 4
change with the matching serial, or nullptr on failure 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int64_t omega_session_get_computed_file_size (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the computed file size in bytes 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the computed file size from 
.RE
.PP
\fBReturns\fP
.RS 4
computed file size in bytes, or -1 on failure 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP const char * omega_session_get_file_path (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the file path being edited (if known) 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to return the file path from 
.RE
.PP
\fBReturns\fP
.RS 4
file path, or null if not known 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP const \fBomega_change_t\fP * omega_session_get_last_change (const \fBomega_session_t\fP * session_ptr)"
Given a session, get the last change (if any) 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the last change from 
.RE
.PP
\fBReturns\fP
.RS 4
last change, or nullptr if there are no changes 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP const \fBomega_change_t\fP * omega_session_get_last_undo (const \fBomega_session_t\fP * session_ptr)"
Given a session, get the last undone change eligible for redo (if any) 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the last undone change eligible for redo from 
.RE
.PP
\fBReturns\fP
.RS 4
last undone change eligible for redo, or nullptr if there are no eligible changes for redo 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int64_t omega_session_get_num_changes (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the current number of active changes 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get number of active changes from 
.RE
.PP
\fBReturns\fP
.RS 4
number of active changes 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP size_t omega_session_get_num_checkpoints (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the current number of session checkpoints 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the number of session checkpoints for 
.RE
.PP
\fBReturns\fP
.RS 4
number of session checkpoints 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int64_t omega_session_get_num_undone_changes (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the current number of undone changes eligible for being redone 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the number of undone changes for 
.RE
.PP
\fBReturns\fP
.RS 4
number of undone changes eligible for being redone 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int64_t omega_session_get_num_viewports (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the number of active viewports 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the number of active viewports for 
.RE
.PP
\fBReturns\fP
.RS 4
number of active viewports 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP void * omega_session_get_user_data_ptr (const \fBomega_session_t\fP * session_ptr)"
Given a session, return the associated user data 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to get the associated user data from 
.RE
.PP
\fBReturns\fP
.RS 4
associated user data for the given session 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP void omega_session_notify (const \fBomega_session_t\fP * session_ptr, \fBomega_session_event_t\fP session_event, const \fBomega_change_t\fP * change_ptr)"
Call the registered session event handler 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session whose event handler to call 
.br
\fIsession_event\fP session event 
.br
\fIchange_ptr\fP pointer to the change 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP void omega_session_pause_viewport_event_callbacks (\fBomega_session_t\fP * session_ptr)"
Pause viewport on-change callbacks for the given session 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to pause viewport on-change callbacks on 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP void omega_session_resume_viewport_event_callbacks (\fBomega_session_t\fP * session_ptr)"
Resume viewport on-change callbacks for the given session 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to resume viewport on-change callbacks on 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP int omega_session_viewport_on_change_callbacks_paused (const \fBomega_session_t\fP * session_ptr)"
Determine if the viewport on-change callbacks have been paused or not 
.PP
\fBParameters\fP
.RS 4
\fIsession_ptr\fP session to determine if viewport on-change callbacks are paused on 
.RE
.PP
\fBReturns\fP
.RS 4
non-zero if viewport on-change callbacks are paused and zero if they are not 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for omega_edit from the source code\&.
