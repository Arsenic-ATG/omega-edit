.TH "src/include/omega_edit/encode.h" 3 "Wed Mar 2 2022" "Version 0.8.1" "omega_edit" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/include/omega_edit/encode.h
.SH SYNOPSIS
.br
.PP
\fC#include 'byte\&.h'\fP
.br
\fC#include 'export\&.h'\fP
.br
\fC#include <stddef\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP size_t \fBomega_encode_bin2hex\fP (const \fBomega_byte_t\fP *src, char *dst, size_t src_length)"
.br
.ti -1c
.RI "\fBOMEGA_EDIT_EXPORT\fP size_t \fBomega_encode_hex2bin\fP (const char *src, \fBomega_byte_t\fP *dst, size_t src_length)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBOMEGA_EDIT_EXPORT\fP size_t omega_encode_bin2hex (const \fBomega_byte_t\fP * src, char * dst, size_t src_length)"
Given a pointer to bytes, and a character pointer destination, write the hex values of the bytes to the destination 
.PP
\fBParameters\fP
.RS 4
\fIsrc\fP pointer to bytes 
.br
\fIdst\fP destination, must be memory sufficient to hold (src_length * 2) + 1 bytes (will be null-terminated) 
.br
\fIsrc_length\fP src_length of the bytes 
.RE
.PP
\fBReturns\fP
.RS 4
number of characters written to the destination, or 0 if unsuccessful 
.RE
.PP

.SS "\fBOMEGA_EDIT_EXPORT\fP size_t omega_encode_hex2bin (const char * src, \fBomega_byte_t\fP * dst, size_t src_length)"
Given a pointer to hex characters, write the binary representation to dst 
.PP
\fBParameters\fP
.RS 4
\fIsrc\fP pointer to hex characters 
.br
\fIdst\fP destination, must be memory sufficient to hold (src_length / 2) bytes 
.br
\fIsrc_length\fP src_length of the hex characters 
.RE
.PP
\fBReturns\fP
.RS 4
number of bytes written to the destination, or 0 if unsuccessful 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for omega_edit from the source code\&.
